apiVersion: v1
kind: Service
metadata:
  name: nextcloud-nginx
  labels:
    app: nextcloud
spec:
  ports:
  - port: 80
    targetPort: 80
    name: http
  - port: 443
    targetPort: 443
    name: https
  type: LoadBalancer
  selector:
    app: nextcloud
    tier: webservice
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  labels:
    app: nextcloud
data:
  nginx.conf: |
    upstream php-handler {
        server 127.0.0.1:9000;
        #server unix:/var/run/php5-fpm.sock;
    }
    
    server {
        listen 80;
        listen [::]:80;
        server_name nextcloud-nginx;
        # enforce https
        return 301 https://$server_name$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name nextcloud-nginx;
    
        ssl_certificate           /etc/nginx/ssl/nextcloud.dev.martintim.com/fullchain.pem;
        ssl_certificate_key       /etc/nginx/ssl/nextcloud.dev.martintim.com/privkey.pem;
    
    
        # Add headers to serve security related headers
        # Before enabling Strict-Transport-Security headers please read into this
        # topic first.
        # add_header Strict-Transport-Security "max-age=15768000;
        # includeSubDomains; preload;";
        #
        # WARNING: Only add the preload option once you read about
        # the consequences in https://hstspreload.org/. This option
        # will add the domain to a hardcoded list that is shipped
        # in all major browsers and getting removed from this list
        # could take several months.
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Robots-Tag none;
        add_header X-Download-Options noopen;
        add_header X-Permitted-Cross-Domain-Policies none;
    
        # Path to the root of your installation
        root /var/www/html;
    
        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }
    
        # The following 2 rules are only needed for the user_webfinger app.
        # Uncoment it if you're planning to use this app.
        #rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
        #rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json
        # last;
    
        location = /.well-known/carddav {
          return 301 $scheme://$host/remote.php/dav;
        }
        location = /.well-known/caldav {
          return 301 $scheme://$host/remote.php/dav;
        }
    
        # set max upload size
        client_max_body_size 20G;
        fastcgi_buffers 64 4K;
    
        # Enable gzip but do not remove ETag headers
        gzip on;
        gzip_vary on;
        gzip_comp_level 4;
        gzip_min_length 256;
        gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;
        gzip_types application/atom+xml application/javascript application/json application/ld    +json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;
    
        # Uncomment if your server is build with the ngx_pagespeed module
        # This module is currently not supported.
        #pagespeed off;
    
        location / {
            rewrite ^ /index.php$uri;
        }

        location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
        }
        location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) {
            deny all;
        }
    
        location ~ ^/(?:index|remote|public|cron|core/ajax/update|status|ocs/v[12]|updater/.+|ocs-provider/.+)\.php(?:$|/) {
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param HTTPS on;
            #Avoid sending the security headers twice
            fastcgi_param modHeadersAvailable true;
            fastcgi_param front_controller_active true;
            fastcgi_pass php-handler;
            fastcgi_intercept_errors on;
            fastcgi_request_buffering off;
        }
    
        location ~ ^/(?:updater|ocs-provider)(?:$|/) {
            try_files $uri/ =404;
            index index.php;
        }
    
        # Adding the cache control header for js and css files
        # Make sure it is BELOW the PHP block
        location ~ \.(?:css|js|woff|svg|gif)$ {
            try_files $uri /index.php$uri$is_args$args;
            add_header Cache-Control "public, max-age=15778463";
            # Add headers to serve security related headers (It is intended to
            # have those duplicated to the ones above)
            # Before enabling Strict-Transport-Security headers please read into
            # this topic first.
            # add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";
            #
            # WARNING: Only add the preload option once you read about
            # the consequences in https://hstspreload.org/. This option
            # will add the domain to a hardcoded list that is shipped
            # in all major browsers and getting removed from this list
            # could take several months.
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
            add_header X-Robots-Tag none;
            add_header X-Download-Options noopen;
            add_header X-Permitted-Cross-Domain-Policies none;
            # Optional: Don't log access to assets
            access_log off;
        }
    
        location ~ \.(?:png|html|ttf|ico|jpg|jpeg)$ {
            try_files $uri /index.php$uri$is_args$args;
            # Optional: Don't log access to other assets
            access_log off;
        }
    }
    server {
        listen       443 ssl;
        server_name  office.dev.martintim.com;
        ssl_certificate           /etc/nginx/ssl/nextcloud.dev.martintim.com/fullchain.pem;
        ssl_certificate_key       /etc/nginx/ssl/nextcloud.dev.martintim.com/privkey.pem;
    
        ssl_session_timeout 5m;
        ssl_ciphers               'AES128+EECDH:AES128+EDH:!aNULL';
        ssl_protocols              TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_dhparam /etc/nginx/ssl/dhparam/dhparam.pem;
        ssl_stapling on;
        ssl_stapling_verify on;
    
        client_max_body_size 10G;
        
        proxy_set_header     X-Forwarded-Proto 'https';
        underscores_in_headers on;
    
        add_header Strict-Transport-Security max-age=15768000;
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Robots-Tag none;
        add_header X-Download-Options noopen;
        add_header X-Permitted-Cross-Domain-Policies none;
    
        access_log  /var/log/nginx/office.access.log;
        error_log   /var/log/nginx/office.error.log;
    
        proxy_buffering off;
    
        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
    
    
        }
    
            # static files
        location ^~ /loleaflet {
            proxy_pass        https://nextcloud-collabora:9980;
            proxy_set_header Host $http_host;
            proxy_ssl_verify              off;
        }
    
        
        # WOPI discovery URL
        location ^~ /hosting/discovery {
            proxy_pass        https://nextcloud-collabora:9980;
            proxy_set_header Host $http_host;
            proxy_ssl_verify              off;
    
     # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    
      # Main websocket
        location ~ /lool/(.*)/ws$ {
            proxy_pass        https://nextcloud-collabora:9980;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $http_host;
            proxy_read_timeout 36000s;
            proxy_ssl_verify              off;
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
    
        }
    # Admin Console websocket
        location ^~ /lool/adminws {
            proxy_pass        http://nextcloud-collabora:9980;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $http_host;
            proxy_read_timeout 36000s;
            proxy_ssl_verify              off;
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
    
        }
    
        # download, presentation and image upload
        location ^~ /lool {
            proxy_pass        https://nextcloud-collabora:9980;
            proxy_set_header Host $http_host;
            proxy_ssl_verify              off;
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
    
        }
    
        location / {
            proxy_pass        https://nextcloud-collabora:9980;
            proxy_set_header Host $http_host;
            proxy_ssl_verify              off;
    
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    
    
    }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nextcloud-persistent-data
  labels:
    app: nextcloud
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nextcloud-persistent-www
  labels:
    app: nextcloud
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: nextcloud-nginx
  labels:
    app: nextcloud
spec:
  selector:
    matchLabels:
      app: nextcloud
      tier: webservice
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nextcloud
        tier: webservice
    spec:
      containers:
      - image: nextcloud:fpm
        name: nextcloud-fpm
        ports:
        - containerPort: 8080
          name: nextcloud
        - containerPort: 9000
          name: php
        volumeMounts:
        - name: nextcloud-custom-apps
          mountPath: /var/www/html/custom_apps
        - name: nextcloud-config
          mountPath: /var/www/html/config
        - name: nextcloud-data
          mountPath: /var/www/html/data
        - name: nextcloud-html
          mountPath: /var/www/html
      - image: nginx:latest
        name: nginx
        ports:
        - containerPort: 80
          name: nginx-http
        - containerPort: 443
          name: nginx-https
        volumeMounts:
        - name: nextcloud-custom-apps
          mountPath: /var/www/html/custom_apps
          readOnly: true
        - name: nextcloud-config
          mountPath: /var/www/html/config
          readOnly: true
        - name: nextcloud-data
          mountPath: /var/www/html/data
          readOnly: true
        - name: nextcloud-html
          mountPath: /var/www/html/
          readOnly: true
        - name: nginx-config-map
          mountPath: /etc/nginx/conf.d/
        - name: nginx-certs
          mountPath: /etc/nginx/ssl/nextcloud.dev.martintim.com/
          readOnly: true
        - name: dhparam
          mountPath: /etc/nginx/ssl/dhparam/
          readOnly: true
      volumes:
      - name: nginx-config-map
        configMap:
          name: nginx-config
      - name: nextcloud-custom-apps
        emptyDir: {}
      - name: nextcloud-config
        emptyDir: {}
      - name: nextcloud-data
        persistentVolumeClaim:
          claimName: nextcloud-persistent-data
      - name: nextcloud-html
        emptyDir: {}
      - name: nginx-certs
        secret:
          secretName: nextcloud-cert
      - name: dhparam
        secret:
          secretName: dhparam-nginx
